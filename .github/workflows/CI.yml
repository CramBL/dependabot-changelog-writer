name: CI

on:
  push:
  pull_request:
    types: [opened, reopened]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust
        run: |
          rustup override set stable
          rustup update stable

      - name: Run tests
        run: cargo test

      - name: Lint
        run: cargo clippy --workspace -- -W clippy::all

      - name: Check formatting
        run: cargo fmt --check

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check spelling of entire workspace
        uses: crate-ci/typos@master

  test-run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build

      - name: Run fake
        if: ${{ github.event_name }} == pull_request
        env:
          RUST_LOG: DEBUG
          GH_TOKEN: ${{ github.token }}
          PUSH_TOKEN: ${{ github.token }}
        run: cargo run -- "CHANGELOG.md" "Some commit message" "github-actions[bot]" "github-actions[bot]@users.noreply.github.com" "Unreleased" "section header 3" "false"

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
            file_extension: .exe

    runs-on: ${{ matrix.os }}
    env:
      binary_name: dependabot-changelog-writer${{ matrix.file_extension }}

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Build docker rust-musl-builder
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: docker build -t rust-musl-builder .
          
      - name: Build Linux MUSL binary with Docker
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            rust-musl-builder
            
      - name: Build macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          export OPENSSL_INCLUDE_DIR=$(brew --prefix openssl)/include
          export OPENSSL_LIB_DIR=$(brew --prefix openssl)/lib
          cargo build --release

      - name: Build windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: cargo build --release

      - name: Copy Artifact Windows/MacOs
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: cp target/release/${{ env.binary_name }} .

      - name: Copy Artifact Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: cp target/x86_64-unknown-linux-musl/release/${{ env.binary_name }} .

      - name: Dryrun binary
        if: ${{ github.event_name }} == pull_request
        shell: bash
        env:
          RUST_LOG: DEBUG
          GH_TOKEN: ${{ github.token }}
          PUSH_TOKEN: ${{ github.token }}
        run: ./${{ env.binary_name }} "CHANGELOG.md" \
                                    "commit msg" \
                                    "github-actions[bot]" \
                                    "github-actions[bot]@users.noreply.github.com" \
                                    "Unreleased" \
                                    "section header 3" \
                                    "false"

