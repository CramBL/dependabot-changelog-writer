name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:
  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
            file_extension: .exe

    runs-on: ${{ matrix.os }}
    env:
      binary_name: dependabot-changelog-writer${{ matrix.file_extension }}

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Install musl target
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: rustup target add x86_64-unknown-linux-musl

      - name: Install musl-tools
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools libssl-dev
          sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm
          sudo ln -s /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic
          sudo ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux

          mkdir musl_build
          MUSL_OPENSSL_BUILD_DIR=$(readlink -f musl_build)
          wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz
          tar zxvf OpenSSL_1_1_1f.tar.gz
          cd openssl-OpenSSL_1_1_1f/

          CC="musl-gcc -fPIE -pie" ./Configure no-shared no-async --prefix=${MUSL_OPENSSL_BUILD_DIR} --openssldir=${MUSL_OPENSSL_BUILD_DIR}/ssl linux-x86_64
          make depend
          make -j$(nproc)
          make install

      - name: Build linux musl
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          export OPENSSL_DIR=$(readlink -f musl_build)
          cargo build --release --target x86_64-unknown-linux-musl
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          OPENSSL_STATIC: true

      - name: Build macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          export OPENSSL_INCLUDE_DIR=$(brew --prefix openssl)/include
          export OPENSSL_LIB_DIR=$(brew --prefix openssl)/lib
          cargo build --release

      - name: Build windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: cargo build --release

      - name: Create Archive Folder
        run: mkdir ${{ runner.os }}

      - name: Copy Artifact Windows/MacOs
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: cp target/release/${{ env.binary_name }} ${{ runner.os }}

      - name: Copy Artifact Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: cp target/x86_64-unknown-linux-musl/release/${{ env.binary_name }} ${{ runner.os }}

      - name: Create Tar Archive
        run: tar -czf ${{ runner.os }}.tgz ${{ runner.os }}

      - name: Store Archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}
          path: ${{ runner.os }}.tgz

  create-release:
    needs: [build-artifacts]
    runs-on: ubuntu-latest
    name: Create Release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "Linux/Linux.tgz,macOS/macOS.tgz,Windows/Windows.tgz"
          tag: v${{ github.event.inputs.version }}
